# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines bellow are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
project_name: tuf-client
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
# This section defines the build matrix
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    main: ./cmd/tuf-client
# This section defines how to release binaries and archives.
archives:
  - format: tar.gz # we can use binary, but it seems there's an issue where goreleaser skips the sboms
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}" # "{{ .Binary }}-{{ .Os }}-{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
# This section defines how to release to homebrew.
brews:
  - homepage: 'https://github.com/rdimitrov/tuf-client-cli'
    description: 'TUF client CLI written in Go based on the rdimitrov/go-tuf-metadata library.'
    folder: Formula
    commit_author:
      name: rdimitrov
      email: rdimitrov@gmail.com
    repository:
      owner: rdimitrov
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    test: |
      system "#{bin}/tuf-client --help"
# This section defines how to release to winget.
winget:
  - name: tuf-client
    publisher: Radoslav Dimitrov
    license: BSD-2 Clause
    license_url: "https://github.com/rdimitrov/tuf-client-cli/blob/master/LICENSE"
    copyright: Radoslav Dimitrov
    homepage: https://github.com/rdimitrov/tuf-client-cli
    short_description: 'TUF client CLI written in Go based on the rdimitrov/go-tuf-metadata library.'
    publisher_support_url: "https://github.com/rdimitrov/tuf-client-cli/issues/new"
    package_identifier: "rdimitrov.tuf-client"
    url_template: "https://github.com/rdimitrov/tuf-client-cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    skip_upload: auto
    release_notes: "{{.Changelog}}"
    tags:
      - golang
      - cli
    commit_author:
      name: rdimitrov
      email: rdimitrow@gmail.com
    goamd64: v1
    repository:
      owner: rdimitrov
      name: winget-pkgs
      branch: "tuf-client-{{.Version}}"
      token: "{{ .Env.WINGET_GTIHUB_TOKEN }}"
      pull_request:
        enabled: true
        draft: true
        base:
          owner: microsoft
          name: winget-pkgs
          branch: master
source:
  enabled: true
changelog:
  sort: asc
  use: github
sboms:
  - artifacts: archive
release:
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  prerelease: auto
  github:
    owner: rdimitrov
    name: tuf-client-cli
signs:
  - cmd: cosign
    args:
      - "sign-blob"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: archive
    output: true
