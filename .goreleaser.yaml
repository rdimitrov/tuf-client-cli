# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines bellow are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
project_name: tuf-client-cli
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
# This section defines the build matrix
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    main: ./cmd/tuf-client
# This section defines how to release binaries and archives.
archives:
  - format: tar.gz # binary # issue where goreleaser skips including the sboms in case of binary format
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}" # "{{ .Binary }}-{{ .Os }}-{{ .Arch }}"
    format_overrides:
      - goos: windows
        format: zip
# This section defines how to release to homebrew.
brews:
  - homepage: 'https://github.com/rdimitrov/tuf-client-cli'
    description: 'TUF client CLI written in Go based on the rdimitrov/go-tuf-metadata library.'
    folder: Formula
    commit_author:
      name: 'Radoslav Dimitrov'
      email: rdimitrov@gmail.com
    repository:
      owner: rdimitrov
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    test: |
      system "#{bin}/tuf-client-cli --help"
source:
  enabled: true
changelog:
  sort: asc
  use: github
sboms:
  - artifacts: archive
release:
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  prerelease: auto
  github:
    owner: rdimitrov
    name: tuf-client-cli
signs:
  - cmd: cosign
    args:
      - "sign-blob"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: archive
    output: true
